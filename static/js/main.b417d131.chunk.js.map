{"version":3,"sources":["components/Todo.js","App.js","index.js"],"names":["Todo","item","onDeleteMode","editMode","onToggle","type","defaultChecked","completed","onChange","id","text","date","className","onClick","App","useState","localStorage","getItem","JSON","parse","todos","setTodos","input","setInput","icon","setIcon","setId","deleteMode","setDeleteMode","useEffect","setItem","stringify","onAdd","length","newId","Math","floor","random","newTodo","Date","toLocaleString","map","todo","find","onEdit","placeholder","e","target","value","Dialog","open","disableBackdropClick","disableEscapeKeyDown","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b417d131.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Todo = ({ item, onDeleteMode, editMode,onToggle }) => {\r\n   \r\n    return (\r\n        <li >\r\n            <input type=\"checkbox\" defaultChecked={item.completed} onChange={() => onToggle(item.id)} />\r\n            <div>\r\n                <p>{item.text}</p>\r\n                <p>{item.date}</p>\r\n            </div>\r\n            <i className=\"fa fa-trash\" onClick={() => onDeleteMode(item.id)} />\r\n            <i className=\"fa fa-pen\" onClick={() => editMode(item.id)} />\r\n        </li>\r\n\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import './App.scss';\nimport { useState, useEffect } from 'react'\nimport { Dialog } from '@mui/material';\nimport Todo from './components/Todo';\n\nfunction App() {\n\n  const [todos, setTodos] = useState(localStorage.getItem(\"todos\") ? JSON.parse(localStorage.getItem(\"todos\")) : [])\n  const [input, setInput] = useState('')\n  const [icon, setIcon] = useState('plus')\n  const [id, setId] = useState('')\n  const [deleteMode, setDeleteMode] = useState(false)\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const onChange = e => {\n    setInput(e.target.value)\n  }\n  const onClick = () => {\n    if (icon === 'plus')\n      onAdd()\n    else onEdit()\n  }\n  const onAdd = () => {\n    if(input.length>0){\n    const newId = Math.floor(Math.random() * 5000)\n    const newTodo = { text: input, date:new Date().toLocaleString(), id: newId,completed:false }\n    setTodos(todos => [...todos, newTodo])\n    setInput('')\n    }\n  }\n  const onToggle = (id) => {\n    setTodos(todos => todos.map(item => {\n        if (item.id === id)\n          item.completed = !(item.completed)\n        return item\n      }))\n}\n  const editMode = (id) => {\n    setId(id)\n    setIcon('pen')\n    const todo = todos.find(item => item.id === id)\n    setInput(todo.text)\n  }\n  const onEdit = () => {\n    if (input.length > 0)\n      setTodos(todos => todos.map(item => {\n        if (item.id === id)\n          item.text = input\n        return item\n      }))\n    setIcon('plus')\n    setInput('')\n    setId('')\n  }\n  const onDeleteMode = (id) => {\n    setId(id)\n    setDeleteMode(true)\n  }\n  const onDelete = () => {\n    setTodos(todos => todos.filter(item => item.id !== id))\n    setId('')\n    setDeleteMode(false)\n  }\n  const onCancel = () => {\n    setDeleteMode(false)\n  }\n \n  return (\n    <>\n      <div className=\"background-circle top-right\" />\n      <div className=\"background-circle bottom-left\" />\n\n      <div className=\"main-container\">\n        <p className=\"intro\">Good Evening</p>\n        <h1 className=\"title\">My ToDo</h1>\n        <div className=\"todos-container\">\n          <div className=\"input-todo-container\">\n            <input type=\"text\" placeholder=\"Type something ...\" onChange={onChange} value={input} />\n            <button className=\"btn-add\" id=\"btn-add\" onClick={onClick}>\n              <i className={`fa fa-${icon}`} id=\"btn-add-icon\" />\n            </button>\n          </div>\n          <ul id=\"todos-list\">\n          {todos.map((item) =>\n                <Todo \n                key={item.id}\n                item= {item}\n                onDeleteMode={onDeleteMode} \n                editMode={editMode}\n                onToggle={onToggle}\n                />\n            )}\n          </ul>\n        </div>\n      </div>\n\n      <Dialog\n        open={deleteMode}\n        disableBackdropClick\n        disableEscapeKeyDown\n      >\n        <div className=\"modal-body\">\n          <div>{`Are you sure you want to delete \"${id ? todos.find(item => item.id === id).text : ''}\" task?`}</div>\n          <div className=\"modal-buttons-container\">\n            <button onClick={onDelete}>\n              Yes, Delete\n            </button>\n            <button onClick={onCancel}>\n              No, Cancel\n            </button>\n          </div>\n        </div>\n      </Dialog>\n\n      \n    </>\n  );\n}\n\nexport default App;\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}